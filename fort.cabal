cabal-version:      3.0
-- The cabal-version field refers to the version of the .cabal specification,
-- and can be different from the cabal-install (the tool) version and the
-- Cabal (the library) version you are using. As such, the Cabal (the library)
-- version used must be equal or greater than the version stated in this field.
-- Starting from the specification version 2.2, the cabal-version field must be
-- the first thing in the cabal file.

-- Initial package description 'fort' generated by
-- 'cabal init'. For further documentation, see:
--   http://haskell.org/cabal/users-guide/
--
-- The name of the package.
name:               fort

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:            0.1.4.0

-- URL for the project homepage or repository.
homepage:           https://github.com/fortlang/fort

-- A short (one-line) description of the package.
synopsis: compiler for the fort programming language

-- A longer description of the package.
description:
  Fort is a general purpose programming language targeting mainly embedded/systems programming.  Fort allows code to be written in a functional style (similar to Haskell 'do' syntax) and produces a finite state machine with fixed, known at compile-time, memory usage (a growable run-time stack is opt-in).  It is straightforward to interface fort code to/from C.

-- The license under which the package is released.
license:            BSD-3-Clause

-- The file containing the license text.
license-file:       LICENSE

-- The package author(s).
author:             Brett Letner

-- An email address to which users can send suggestions, bug reports, and patches.
maintainer:         brett@fortlang.org

-- A copyright notice.
-- copyright:
category:           Language
build-type:         Simple

-- Extra doc files to be distributed with the package, such as a CHANGELOG or a README.
extra-doc-files:    CHANGELOG.md

-- Extra source files to be distributed with the package, such as examples, or a tutorial module.
extra-source-files: cbits/builtins.h cbits/builtins.c

common warnings
    ghc-options: -Weverything -fno-warn-missing-import-lists -fno-warn-all-missed-specialisations -fno-warn-unsafe -fno-warn-missing-safe-haskell-mode -fno-warn-missing-kind-signatures -fno-warn-prepositive-qualified-module -fno-warn-missing-local-signatures -fno-warn-missing-deriving-strategies -fno-warn-missed-specializations -fno-warn-orphans -fno-warn-deriving-typeable -fno-warn-operator-whitespace -fno-warn-missing-export-lists -fno-warn-missing-export-lists -fno-warn-deriving-typeable -fno-warn-operator-whitespace -fno-warn-missing-role-annotations -optP-Wno-nonportable-include-path
    -- ignoring the following warnings because of bnfc:
    -- -fno-warn-deriving-typeable
    -- -fno-warn-missing-export-lists 
    -- -fno-warn-operator-whitespace

executable fort

    -- Import common warning flags.
    import:           warnings

    -- .hs or .lhs file containing the Main module.
    main-is:          Main.hs

    -- Modules included in this executable, other than Main.
    other-modules:

    -- LANGUAGE extensions used by modules in this package.
    default-extensions: OverloadedStrings
    -- other-extensions: 
    -- Other library packages from which modules are imported.
      -- base ^>=4.18.0.0
    build-depends:
      base, fort, optparse-applicative
    -- Directories containing source files.
    hs-source-dirs:   app

    -- Base language which the package is written in.
    default-language: Haskell2010

library
  import: warnings
  hs-source-dirs:   src, Generated
  default-extensions: OverloadedStrings
      , TupleSections
      , ScopedTypeVariables
      , TypeFamilies
      , FlexibleContexts
      , MultiWayIf 
      , FlexibleInstances
      , TypeFamilies
      , MultiParamTypeClasses
      , FunctionalDependencies
      , GeneralizedNewtypeDeriving
      , NoImplicitPrelude
      , DeriveDataTypeable

  exposed-modules:
      Fort.Abs, Fort.Layout, Fort.Lex, Fort.Par, Fort.Print, Fort.Utils
      , Fort.Qualify, Fort.Precedence, Fort.Bindings, Fort.FreeVars
      , Fort.Val, Fort.LLVM, Fort.Simplify, Fort.Dependencies, Fort.FIL, Fort.Prims, Fort.TypeChecker, Fort.Type, Fort.Errors, Fort.Parse, Fort.AST, Fort.FunctorAST, Fort, Paths_fort

  build-depends:
    base
    , uniplate
    , prettyprinter
    , text
    , array
    , containers
    , mtl
    , process
    , optparse-applicative
    , diagnose
    , wcwidth

  default-language:    Haskell2010

test-suite tests
   hs-source-dirs:      test
   main-is:             FortTests.hs
   default-language:    Haskell2010
   type:                exitcode-stdio-1.0
   default-extensions: OverloadedStrings, ScopedTypeVariables, FlexibleInstances
   build-depends:
      base
    , fort
    , directory
    , optparse-applicative
    , prettyprinter
