qualifier Prelude = "lib/prelude.fort"

main = do
  even = \i -> if
    i == 0 -> Done Even
    True -> Continue (Odd, i - 1)

  odd = \i -> if
    i == 0 -> Done Odd
    True -> Continue (Even, i - 1)

  foo = \(x, i) -> case x of
    Even -> even i
    Odd -> odd i

  mkEO = \x -> cast x `Sum{ Even; Odd }`

  goEven = \i -> loop (mkEO Even, i) foo
  goOdd = \i -> loop (mkEO Odd, i) foo

  print "5 is "
  println (goEven 5)
  print "4 is "
  println (goEven 4)
  print "5 is not "
  println (goOdd 5)
  print "4 is not "
  println (goOdd 4)
  print "0 is not "
  a = case 0 of
    0 -> goEven 3
    _ -> Even
  println a

